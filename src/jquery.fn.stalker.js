// Generated by CoffeeScript 1.6.2
/*
https://github.com/luxx/jquery-stalker
Apache 2.0 licence

Stalker is a cool jQuery transition effect plugin - when scrolled past, it attaches specified element to the top of
the screen. As you scroll past it becomes fixed, and when you scroll back beyond the element, it goes back to normal
positioning.

Usage:
jQuery("#stalker").stalker();

https://github.com/luxx/jquery-stalker

Originally part of the AJS library http://docs.atlassian.com/aui/latest/AUI/js/atlassian/jquery/, it has since been
deprecated: https://ecosystem.atlassian.net/browse/AUI-676. AJS dependency removed and released to github by Lane LaRue.
AJS and all modifications are licenced Apache 2.0: http://www.apache.org/licenses/LICENSE-2.0
*/


(function() {
  var $;

  $ = jQuery;

  $.fn.extend({
    stalker: function(options) {
      var defaults;

      if (options == null) {
        options = {};
      }
      defaults = {};
      options = $.extend({}, defaults, options);
      return this.each(function() {
        var $document, $element, $window, getInactiveProperties, initialize, initialized, lastScrollPosY, offsetPageScrolling, offsetY, placeholder, setStalkerPosition, stalkerHeight;

        $window = jQuery(window);
        $document = jQuery(document);
        $element = $(this);
        offsetY = void 0;
        placeholder = void 0;
        lastScrollPosY = void 0;
        stalkerHeight = void 0;
        initialized = void 0;
        initialize = function() {
          var createPlaceholder, getPlaceholderCss, setPlaceholderHeight;

          getPlaceholderCss = function() {
            var css;

            $element.css("overflow", "hidden");
            css = $element.css(['height', 'width', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'borderTop', 'borderBottom', 'borderLeft', 'borderRight']);
            stalkerHeight = $element.height();
            $element.css("overflow", "");
            return css = $.extend({}, css, {
              'visibility': 'hidden'
            });
          };
          createPlaceholder = function() {
            return placeholder = jQuery("<div />").addClass("stalker-placeholder").css(getPlaceholderCss()).insertBefore($element);
          };
          setPlaceholderHeight = function() {
            if (!$element.hasClass("detached")) {
              return placeholder.height($element.height());
            } else {
              placeholder.height($element.removeClass("detached").height());
              return $element.addClass("detached");
            }
          };
          offsetY = $element.offset().top - parseInt($element.css('marginTop'));
          createPlaceholder();
          setPlaceholderHeight();
          $element.css(getInactiveProperties());
          $element.on("stalkerHeightUpdated", setPlaceholderHeight);
          $element.on("positionChanged", setStalkerPosition);
          return initialized = true;
        };
        getInactiveProperties = function() {
          return {
            position: "fixed",
            top: offsetY - $window.scrollTop()
          };
        };
        setStalkerPosition = function() {
          if (!initialized) {
            initialize();
          }
          if (offsetY <= $window.scrollTop()) {
            if (!$element.hasClass("detached")) {
              $element.css({
                top: 0,
                position: "fixed"
              }).addClass("detached");
            }
          } else {
            $element.css(getInactiveProperties()).removeClass("detached");
          }
          return lastScrollPosY = $window.scrollTop();
        };
        offsetPageScrolling = function() {
          var pageDown, pageUp, setScrollPostion;

          setScrollPostion = function(scrollTarget) {
            var docHeight, scrollPos;

            docHeight = jQuery.getDocHeight();
            scrollPos = void 0;
            if (scrollTarget >= 0 && scrollTarget <= docHeight) {
              scrollPos = scrollTarget;
            } else if (scrollTarget >= $window.scrollTop()) {
              scrollPos = docHeight;
            } else {
              if (scrollTarget < 0) {
                scrollPos = 0;
              }
            }
            return $window.scrollTop(scrollPos);
          };
          pageUp = function() {
            var scrollTarget;

            if (!initialized) {
              initialize();
            }
            scrollTarget = jQuery(window).scrollTop() - jQuery(window).height();
            return setScrollPostion(scrollTarget + stalkerHeight);
          };
          pageDown = function() {
            var scrollTarget;

            if (!initialized) {
              initialize();
            }
            scrollTarget = jQuery(window).scrollTop() + jQuery(window).height();
            return setScrollPostion(scrollTarget - stalkerHeight);
          };
          return jQuery(function() {
            $document.on("keydown keypress keyup", "pagedown", function(e) {
              if (e.type === "keydown") {
                pageDown();
              }
              return e.preventDefault();
            });
            $document.on("keydown keypress keyup", "pageup", function(e) {
              if (e.type === "keydown") {
                pageUp();
              }
              return e.preventDefault();
            });
            $document.on("keydown keypress keyup", "space", function(e) {
              if (e.type === "keydown") {
                pageDown();
              }
              return e.preventDefault();
            });
            return $document.on("keydown keypress keyup", "shift+space", function(e) {
              if (e.type === "keydown") {
                pageUp();
              }
              return e.preventDefault();
            });
          });
        };
        offsetPageScrolling();
        $document.on('click', function(e) {
          if (jQuery(e.target).is($element) && !initialized) {
            return initialize();
          }
        });
        $document.on("showLayer", function(e, type) {
          if (jQuery.browser.mozilla && type === "popup") {
            return setStalkerPosition();
          }
        });
        $element.add(".stalker-placeholder").offsetAnchors();
        $window.scroll(setStalkerPosition).resize(function() {
          if ($element) {
            return $element.trigger("stalkerHeightUpdated");
          }
        });
        return this;
      });
    }
  });

}).call(this);
